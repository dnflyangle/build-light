= blinky

blinky helps you see the light

* plug and play set up for build lights
* get a build light up and running in a few minutes.

== Why blinky?

Setting up a build light on a new project always seems to be more of a hassle than it should be. Somehow it always seems that no one else has ever dealt with the exact combination of OS, CI Server and build light that you have in your sweaty little hands, and you have to write something from scratch. Again.

blinky is an attempt to fix that.

blinky aims to supply plug and play support for all combinations of
* USB Light Model (or any other USB Device used to indicate build status)
* Operating System
* CI Server

Heres blinky running three different lights at once:

{<img src="https://raw.github.com/perryn/blinky/master/lights.jpg" height="50%" width="50%">}[https://raw.github.com/perryn/blinky/master/lights.jpg]

== What lights do blinky support?

* Declcom Engineering Visual Indicator
* Thing M Blink 1
* Dream Cheeky Webmail Notifier 
* Automated Architecture Siren of Shame

== How do I setup blinky?

  brew install libusb

  gem install blinky

  bundle install


You will need to update the .env file to add in your username and password to the cctray go pipeline feed. Below are examples of URL and BUILDS when using with go cd.

URL="https://go.nbnco.net.au/go/cctray.xml"

BUILDS="AtlasOperateDevServer \:\: BuildAndPublish, AtlasOperateDevServer \:\: IntegrationTests \:\: tests"

== How do I use blinky?

Plug in your USB light, and then do something like this

  chicanery lib/go.rb

== Copyright

Copyright (c) 2010 Perryn Fowler. See LICENSE for details.
